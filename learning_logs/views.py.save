from django.http import HttpResponseRedirect
#from django.core.urlresolvers import reverse
from django.shortcuts import render
from .models import Topic
from .forms import TopicForm, EntryForm

def index(request):
	"""A pagina inicial de learning Log"""
	return render(request,"learning_logs/index.html")

def topics(request):
	"""Mostra todos assuntos"""
	topics = Topic.objects.order_by("date_added")
	context = {"topics":topics}
	return render(request, "learning_logs/topics.html", context)


def topic(request, topic_id):
	"""Mostra um unico assunto e suas entradas"""
	topic = Topic.objects.get(id = topic_id)
	entries = topic.entry_set.order_by("-date_added")
	context = {"topic" : topic, "entries":entries}
	return render(request,"learning_logs/topic.html",context)

def new_topic(request):
	"""Adciona um novo assunto"""
	if request.method != "POST":
		#Nenhum dado submetido cria um formulario em branco
		form = TopicForm()
	else:
		#Dados do POST submetidos processa os dados
		form = TopicForm(request.POST)

	if form.is_valid():
		form.save()
		#return HttpResponseRedirect(reverse("learning_logs:topics"))
# O reverse determina o url a partir de um padrão de URL nomeado, mas parece
# que já ñ é assim que se faz depois vejo como fazer ...
		return HttpResponseRedirect("http://127.0.0.1:8000/topic/"+args=[topic_id])
	context = {"form" : form}
	return render(request,"learning_logs/new_topic.html",context)

def new_entry(request, topic_id):
	"""Acrescenta uma nova entrada para um assunto em particular"""
	topic = Topic.objects.get(id = topic_id)

	if request.method != "POST":
		#Nenhum dado submetido Cria um formulario vazio
		form = EntryForm()
	else:
		#Dados de POST submetidos processa os dados		form = EntryForm(data=request.POST)

	if form.is_valid():
		new_entry = form.save(commit = False)
		new_entry.topic = topic
		new_entry.save()
		return HttpResponseRedirect("https://127.0.0.1:8000/topics")
#Onde esta o links seria reverse("learning_logs:topic",args=[topic_id])
#Mas como disse o reverse esta em desatualizao
	context = {"topic" : topic, "form" : form}
	return render(request,"learning_logs/new_entry.html",context)
